name: Build and Push to ECR

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: sa-east-1

    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Rebuild SSL certificates from secrets
      run: |
        mkdir -p apache/certs/certs apache/certs/private

        echo "$SSL_CERT" | base64 -d > apache/certs/certs/wrrm_lat.crt
        echo "$SSL_KEY" | base64 -d > apache/certs/private/wrrm.lat.key

        # Optional: chain file
        if [ ! -z "$SSL_CHAIN" ]; then
          echo "$SSL_CHAIN" | base64 -d > apache/certs/certs/wrrm_lat.ca-bundle
        fi
      env:
        SSL_CERT: ${{ secrets.SSL_CERT }}
        SSL_KEY: ${{ secrets.SSL_KEY }}
        SSL_CHAIN: ${{ secrets.SSL_CHAIN }}

    - name: Build and push Docker images to ECR
      run: |
        FRONTEND_URI=960177448694.dkr.ecr.sa-east-1.amazonaws.com/home-app-frontend:v39
        BACKEND_URI=960177448694.dkr.ecr.sa-east-1.amazonaws.com/home-app-backend:v39

        echo "ðŸ”§ Building FRONTEND with VITE_BACKEND_URL=https://wrrm.lat"
        docker build -t $FRONTEND_URI \
          --build-arg VITE_BACKEND_URL=https://wrrm.lat \
          -f ./family-gallery/Dockerfile.prod ./family-gallery

        echo "ðŸ“¦ Building BACKEND"
        docker build -t $BACKEND_URI -f ./server/Dockerfile.prod ./server

        echo "ðŸš€ Pushing images to ECR"
        docker push $FRONTEND_URI
        docker push $BACKEND_URI
